name: Deploy AWS Infra
on:
  workflow_dispatch

env:
  tf_version: '1.5.7'
  tg_version: '0.50.8'
  live_dir: 'live/prod/eu-west-1'
  owner: "eladbe96"
  repo: "p81-CloudFront"
  api_version: "2022-11-28"
  token: ${{ secrets.GIT_TOKEN }}
  s3_name: "S3"
  cloud_front_url: "CLOUDFRONT_URL"

  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_V2 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_V2 }}
          aws-region: eu-west-1

      - name: plan s3 - terragrunt
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.live_dir }}/s3
          tg_command: 'plan'
        if: github.ref == 'refs/heads/main'

      - name: apply s3 - terragrunt
        uses: gruntwork-io/terragrunt-action@v2
        env: 
          INPUT_POST_EXEC_1: |
            echo "$(terragrunt output aws_s3_bucket | tr -d '"')" > s3_bucket.txt
        with:
          terraform_wrapper: false
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.live_dir }}/s3
          tg_command: 'apply'

      - name: plan cloudfront - terragrunt
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.live_dir }}/cloudfront
          tg_command: 'plan'
        if: github.ref == 'refs/heads/main'

      - name: apply cloudfront - terragrunt
        uses: gruntwork-io/terragrunt-action@v2
        env: 
          INPUT_POST_EXEC_1: |
            echo "$(terragrunt output -raw aws_cloudfront_distribution_URL | tr -d '"')" > cloudfront_id.txt
        with:
          terraform_wrapper: false
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.live_dir }}/cloudfront
          tg_command: 'apply'
          
      - name: apply s3 policy - terragrunt
        id: plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.live_dir }}/policy
          tg_command: 'plan'
        if: github.ref == 'refs/heads/main'

      - name: apply s3 policy - terragrunt
        uses: gruntwork-io/terragrunt-action@v2
        with:
          terraform_wrapper: false
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.live_dir }}/policy
          tg_command: 'apply'

      - name: Run Python Script
        run: |
          pip install requests boto3 
          export S3_BUCKET_NAME=$(cat ${{ env.live_dir }}/s3/s3_bucket.txt)
          export CLOUDFRONT_URL=$(cat ${{ env.live_dir }}/cloudfront/cloudfront_id.txt)
          url_post = f"https://api.github.com/repos/{${{ env.owner }}}/{${{ env.repo }}}/actions/variables"
          headers = {
              "Accept": "application/vnd.github+json",
              "Authorization": f"Bearer {${{ env.token }}}",
              "X-GitHub-Api-Version": api_version }
          
          data = {
              "name": "S3",
              "value": f'"{S3_BUCKET_NAME}"'  }
          response_post = requests.post(url_post, headers=headers, json=data)
          if response_post.status_code == 201:  
              print("Variable created successfully.")
          else:
              print(f"Error: {response_post.status_code} - {response_post.text}")
          python3 app/main.py



 
